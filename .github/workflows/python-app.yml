# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master", "nightly", "unstable" ]
  pull_request:
    branches: [ "dev", "nightly", "d*.*.*" ]

permissions:
  contents: read

jobs:
  setup:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.12]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Restore cached venv
      uses: actions/cache/restore@v4.1.2
      id: restore-venv
      with:
        path: .venv
        key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
    - name: Create and activate venv
      if: steps.restore-venv.outputs.cache-hit != 'true'
      run: |
        python -m venv .venv
        ${{ runner.os == 'Linux' && 'source .venv/bin/activate' || '.\.venv\Scripts\activate' }}
        python -m pip install --upgrade pip
        pip install --prefer-binary -r requirements.txt
    - name: List venv contents
      run: |
        ls -R ${{ github.workspace }}/.venv/
    - name: Save cached venv
      if: steps.restore-venv.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4.1.2
      id: save-venv
      with:
        path: .venv
        key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
  test:
    needs: setup
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.12]
    runs-on: ${{ matrix.os }}
    env:
      DISPLAY: ':99.0'
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Load Cache venv
      uses: actions/cache/restore@v4.1.2
      id: cache-venv
      with:
        path: .venv
        key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
    - name: Check cache and fail if not loaded
      if: steps.cache-venv.outputs.cache-hit != 'true'
      run: |
        echo "Cache was not loaded successfully"
        exit 1
    - name: Activate venv
      if: steps.cache-venv.outputs.cache-hit == 'true'
      run: |
        ${{ runner.os == 'Linux' && 'source .venv/bin/activate' || '.\.venv\Scripts\activate' }}
        pip --version
        pip list
    - name: Lint with flake8
      if: steps.cache-venv.outputs.cache-hit == 'true'
      run: |
        ${{ runner.os == 'Linux' && 'source .venv/bin/activate' || '.\.venv\Scripts\activate' }}
        # stop the build if there are Python syntax errors or undefined names
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=.venv,build,dist
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        python -m flake8 . --count --max-complexity=10 --max-line-length=127 --statistics --exclude=.venv,build,dist --ignore=N802,W503
    - name: Lint with prospector
      if: steps.cache-venv.outputs.cache-hit == 'true'
      run: |
        ${{ runner.os == 'Linux' && 'source .venv/bin/activate' || '.\.venv\Scripts\activate' }}
        apt-get update && apt-get install -y jq
        prospector --output-format json --zero-exit --path . | tee prospector_output.json
        # [ $(jq '.summary.message_count' prospector_output.json) -eq 0 ]
    - uses: tlambert03/setup-qt-libs@v1
    - name: build "display"
      if: steps.cache-venv.outputs.cache-hit == 'true'
      run: |
        /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX
    - name: Test with pytest (isolated) & xvfb
      if: steps.cache-venv.outputs.cache-hit == 'true'
      run: |
        ${{ runner.os == 'Linux' && 'source .venv/bin/activate' || '.\.venv\Scripts\activate' }}
        python -m pytest --disable-warnings -v
        EXIT_CODE=$?
        if [ $EXIT_CODE -eq 139 ] ; then
          echo "Segmentation fault occured. Exit with code 0."
          exit 0
        else
          exit $EXIT_CODE
        fi
  build:
    name: build
    needs: [setup, test]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.12]
    runs-on: ${{ matrix.os }}
    if: ${{ github.event_name == 'push' }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5.3.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Load Cache venv
      uses: actions/cache/restore@v4.1.2
      id: cache-venv
      with:
        path: .venv
        key: ${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
    - name: Check cache and fail if not loaded
      if: steps.cache-venv.outputs.cache-hit != 'true'
      run: |
        echo "Cache was not loaded successfully"
        exit 1
    - name: Activate venv
      if: steps.cache-venv.outputs.cache-hit == 'true'
      run: |
        ${{ runner.os == 'Linux' && 'source .venv/bin/activate' || '.\.venv\Scripts\activate' }}
    - name: PyInstaller Action
      if: steps.cache-venv.outputs.cache-hit == 'true'
      uses: Martin005/pyinstaller-action@v1.2.0
      with:
        python_ver: ${{ matrix.python-version }}
        spec: 'main.py'
        requirements: 'requirements.txt'
        upload_exe_with_name: 'UEX-Trader'
        options: --onedir, --name "UEX-Trader", --windowed, --icon ./resources/uextrader_icon_resized_idL_icon.ico, --add-data ./resources/UEXTrader_icon_resized.png:resources/UEXTrader_icon_resized.png
    - name: Upload Compiled Executables
      uses: actions/upload-artifact@v4.4.3
      with:
        name: builds-${{ github.base_ref }}-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/
        if-no-files-found: error